defmodule CheckerMal.Core.Scheduler.Test do
  use ExUnit.Case, async: true

  alias CheckerMal.Core.Scheduler

  test 'expiry has expired' do
    expired =
      Scheduler.check_expired(
        %{
          anime: [
            {"20", 345_600, ~N[2020-11-15 16:52:16]},
            {"3", 1800, ~N[2020-11-15 16:52:16]},
            {"40", 864_000, ~N[2019-11-15 16:52:16]},
            {"8", 28800, ~N[2020-11-15 16:52:16]},
            {"infinite", 5_184_000, ~N[2020-11-15 14:03:39]},
            {"unapproved", 2_592_000, ~N[2020-11-15 14:03:39]}
          ],
          manga: [
            {"20", 345_600, ~N[2020-11-15 14:03:39]},
            {"3", 1800, ~N[2019-11-15 14:03:39]},
            {"40", 864_000, ~N[2019-11-15 14:03:39]},
            {"8", 28800, ~N[2019-11-15 14:03:39]},
            {"infinite", 5_184_000, ~N[2020-11-15 14:03:39]},
            {"unapproved", 2_592_000, ~N[2019-11-15 14:03:39]}
          ]
        },
        ~N[2020-11-15 18:36:37.204728]
      )

    assert expired == [anime: "40", manga: "unapproved"]
  end

    test 'expiry returns nothing' do
    expired =
      Scheduler.check_expired(
        %{
          anime: [
            {"20", 345_600, ~N[2020-11-15 16:52:16]},
            {"3", 1800, ~N[2021-11-15 16:52:16]},
            {"40", 864_000, ~N[2020-11-15 16:52:16]},
            {"8", 28800, ~N[2020-11-15 16:52:16]},
            {"infinite", 5_184_000, ~N[2020-11-15 14:03:39]},
            {"unapproved", 2_592_000, ~N[2020-11-15 14:03:39]}
          ],
          manga: [
            {"20", 345_600, ~N[2020-11-15 14:03:39]},
            {"3", 1800, ~N[2021-11-15 14:03:39]},
            {"40", 864_000, ~N[2020-11-15 14:03:39]},
            {"8", 28800, ~N[2020-11-15 14:03:39]},
            {"infinite", 5_184_000, ~N[2020-11-15 14:03:39]},
            {"unapproved", 2_592_000, ~N[2020-11-15 14:03:39]}
          ]
        },
        ~N[2020-11-15 18:36:37.204728]
      )

    assert expired == []
  end
end
